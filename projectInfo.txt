Version 1 Summary: Initial Landing Page Setup

Files:
index.html
style.css

What Was Done:
Created a basic landing page layout using HTML5
Added simple visual styling with an external CSS file (style.css)
Placed files inside htdocs/MovieStoreFront-Web for XAMPP compatibility
Verified that everything loads correctly via http://localhost/MovieStoreFront-Web/index.html
Initialized a new Git repository and pushed to GitHub
Repo: CIS-17B_Movie_Storefront_Individual-Phase2

Lines of Code Added:
~70-80 lines (HTML + CSS)

Time Spent:
~1.5-2 hours (setup, design, GitHub configuration)

Version 2 Summary: Web Login and Register UI + PHP Stubs

Files:
login.html
register.html
style.css (updated)
src/php/login.php
src/php/register.php

What Was Done:
Created basic login and register pages with HTML/CSS layout
Each form has username/password fields and submit buttons
Linked pages to 'login.php' and 'register.php' for future back-end handling
Verified browser display and styling
Set up MVC structure for PHP logic in future versions

Lines of Code Added:
~80-100 (HTML/CSS combined)

Time Spent:
~2-3 hours (page creation, layout, directory setup, testing, version control)

Version 3 Summary: Front-End Login/Register + PHP Backend Hookup

Files Created:
login.html (updated)
register.html (updated)
src/php/login.php
src/php/register.php

What Was Done:
Linked each form to its repective backend PHP handler (login.php and register.php)
Implemented a basic test login with hardcoded "admin"/"admin" credentials in login.php
Successfully tested the flow: user input -> PHP -> server response

Lines of Code Added:
~90-110 lines (HTML, PHP, and CSS combined)

Time Spent:
~2-3 hours (HTML/CSS design, PHP logic setup, folder validation, and testing)

Version 4 Summary: Basic Login and Registration handling

Files:
login.html
register.html
src/php/login.php
src/php/register.php

What Was Done:
login.php: Validates if the user is "admin" with hardcoded credentials and shows success/failure messages
register.php: Simulates user registration with simple success/failure output based on form input

Lines of Code Added:
~50-70 lines (PHP + HTML updates)

Time Spent:
~1.5-2 hours (debugging structure, fixing file paths, clarifying logic flow)

Version 5 Summary: Dynamic Movie Display from Backend

Files:
src/php/get_movies.php
index.html (updated)
style.css (updated)

What Was Done:
Backend (PHP): Created get_movies.php to simulate loading movie data from a database
Movie data is structured in an array of associative arrays (each representing a movie)
PHP script returns the data as a JSON response using json_encode()
Frontend (HTML + JS):In index.html added a Now Showing section to visually display movie listings
Embedded a <script> block that calls get_movies.php using the Fetch API
Parses the JSON response
Dynamically builds and inserts HTML movie cards into the page
CSS (style.css) styled the movie card layout using flexbox and padding
Designed individual .movie-card boxes to hold movie details neatly

Lines of Code Added:
PHP: ~20 lines
HTML: ~15 lines (movie section + JS)
CSS: ~15 lines
Total: ~50 lines

Time Spent:
~2.5 hours

Version 6 Summary: Regex Form Validation with JavaScript

Files:
register.html (updated)
login.html (updated)
src/js/validation.js

What Was Done:
Implemented client-side validation using JavaScript (validation.js)
Added regex rules for: Username (4-12 chars, letters and digits only)
Password (6-20 chars, must include letters and numbers)
Confirm password matches original
Connected validation.js to both forms
Alert messages prevent form submission on invalid input

Lines of Code Added:
~60-70 lines (HTML + JS)

Time Spent:
~2.5 hours (planning regex, implementing JS, testing, debugging, archiving)

Version 7 Summary: Final Login Flow and Regex Validation

Files:
login.html (updated)
register.html
src/php/login.php (updated)
src/php/register.php (updated)
src/js/validation.js (updated)

What Was Done:
Improved login system to handle admin and user logins distinctly 
Admin logs in with admin/admin1, user gets personalized welcome messages
Both users redirect back to homepage with working links
JavaScript validation added to login and registration forms using regex
Full end-to-end test of login/registration behavior in the browser

Lines of Code Added:
~90-11- lines (HTML, PHP, JavaScript combined)

Time Spent:
~3 hours (validation logic, integration, testing, bug fixing)
